{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/jerrijung/Documents/jeremy-nextJS/nextjs-dashboard/app/lib/helperFunctions.ts"],"sourcesContent":["import { ACFPost, FeaturedImage } from \"../types/postTypes\";\n\nexport const getImageGallery = (post: ACFPost): FeaturedImage[] => {\n  console.log(\"the post look for the images: \", post)\n  const images: FeaturedImage[] = [];\n\n  for (let i = 1; i <= 4; i++) {\n    const key = `imageGallery${i}` as keyof ACFPost;\n    const image = post[key];\n    \n    if (image) {\n      images.push(image as FeaturedImage);\n    }\n  }\n\n  return images;\n};\n\nexport const formatDate = (dateString?: string) => {\n  if (!dateString) return \"\";\n  return new Intl.DateTimeFormat(\"en-US\", {\n    dateStyle: \"long\",\n  }).format(new Date(dateString));\n};\n\n\nexport function translateSlugs( slug: string ): string {\n  let newSlug: string | undefined;\n  switch( slug ) {\n    case 'objects': \n      newSlug = 'things';\n      break;\n    case 'sounds':\n      newSlug = 'sound';\n      break;\n    case 'videos':\n      newSlug = 'video';\n      break;  \n    case 'webprojects':\n      newSlug = 'webportfolio';\n      break;\n    default:\n      newSlug = slug;\n  }\n  return newSlug;\n}\n\n"],"names":[],"mappings":";;;;;AAEO,MAAM,kBAAkB,CAAC;IAC9B,QAAQ,GAAG,CAAC,kCAAkC;IAC9C,MAAM,SAA0B,EAAE;IAElC,IAAK,IAAI,IAAI,GAAG,KAAK,GAAG,IAAK;QAC3B,MAAM,MAAM,CAAC,YAAY,EAAE,GAAG;QAC9B,MAAM,QAAQ,IAAI,CAAC,IAAI;QAEvB,IAAI,OAAO;YACT,OAAO,IAAI,CAAC;QACd;IACF;IAEA,OAAO;AACT;AAEO,MAAM,aAAa,CAAC;IACzB,IAAI,CAAC,YAAY,OAAO;IACxB,OAAO,IAAI,KAAK,cAAc,CAAC,SAAS;QACtC,WAAW;IACb,GAAG,MAAM,CAAC,IAAI,KAAK;AACrB;AAGO,SAAS,eAAgB,IAAY;IAC1C,IAAI;IACJ,OAAQ;QACN,KAAK;YACH,UAAU;YACV;QACF,KAAK;YACH,UAAU;YACV;QACF,KAAK;YACH,UAAU;YACV;QACF,KAAK;YACH,UAAU;YACV;QACF;YACE,UAAU;IACd;IACA,OAAO;AACT"}},
    {"offset": {"line": 50, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":["file:///Users/jerrijung/Documents/jeremy-nextJS/nextjs-dashboard/app/lib/api/fetch.ts"],"sourcesContent":["import { Entry, WordPressAPIResponse } from \"@/app/types/cvEntryTypes\";\nimport {\n  Post,\n  PostResponse,\n  PostCategory,\n  Product,\n  ProductResponse,\n} from \"@/app/types/postTypes\";\nimport { translateSlugs } from \"../helperFunctions\";\n\nconst API_URL =\n  process.env.WORDPRESS_GRAPHQL_ENDPOINT || \"https://wp.jeremywy.com/graphql\";\n\n// local use functions\nfunction transformExpoData(json: WordPressAPIResponse): Entry[] {\n  return json.data.cvEntries.nodes.map((item) => ({\n    title: item.title,\n    type: item.cvEntryFields.type[0] ?? \"undefined\", // Use ?? instead of |\n    date: item.cvEntryFields.date,\n    location: item.cvEntryFields.location,\n    description: item.cvEntryFields.description,\n    renderDate: item.cvEntryFields.renderDate,\n    link: item.cvEntryFields.link,\n  }));\n}\n\nexport async function getPosts() {\n  const res = await fetch(API_URL, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      query: `\n        query {\n          posts {\n            nodes {\n              id\n              title\n              excerpt\n              slug\n              date\n              \n            }\n          }\n        }\n      `,\n    }),\n    next: { revalidate: 60 }, // ISR (Incremental Static Regeneration)\n  });\n\n  const json = await res.json();\n  // console.log(\"did we content\", json.data.posts.nodes)\n  return json.data.posts.nodes;\n}\n\n// use to get immix-tracks\nexport async function getImmixTracks(): Promise<Post[]> {\n  const res = await fetch(API_URL, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      query: `\n        query GetPostsByCategory {\n          posts(\n            where: { categoryName: \"immix-tracks\" }\n          ) {\n            nodes {\n              id\n              title\n              excerpt\n              slug\n              date\n              tags {\n                nodes {\n                  id\n                  name\n                  slug\n                }\n              }\n              featuredImage {\n                node {\n                  sourceUrl\n                  altText\n                  mediaDetails {\n                    sizes {\n                      width\n                      height\n                    }\n                  }\n                }\n              }\n              acfPosts {\n                date\n                description\n                immixInternalLink\n              }\n              \n            }\n          }\n        }\n      `,\n    }),\n    next: { revalidate: 60 },\n  });\n\n  const json: PostResponse = await res.json();\n\n  // Ensure acfPosts.date exists before sorting\n  return json.data.posts.nodes.sort((a, b) => {\n    const dateA = new Date(a.acfPosts.date || \"1970-01-01\");\n    const dateB = new Date(b.acfPosts.date || \"1970-01-01\");\n\n    return dateB.getTime() - dateA.getTime();\n  });\n}\n\nexport async function getPostsByCategory(category: string): Promise<Post[]> {\n  const res = await fetch(API_URL, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      query: `\n        query GetPostsByCategory {\n          posts(\n            where: { categoryName: \"${category}\" }\n          ) {\n            nodes {\n              id\n              title\n              excerpt\n              slug\n              date\n              tags {\n                nodes {\n                  id\n                  name\n                  slug\n                }\n              }\n              featuredImage {\n                node {\n                  sourceUrl\n                  altText\n                  mediaDetails {\n                    sizes {\n                      width\n                      height\n                    }\n                  }\n                }\n              }\n              acfPosts {\n                date\n                description\n              }\n            }\n          }\n        }\n      `,\n    }),\n    next: { revalidate: 60 },\n  });\n\n  const json: PostResponse = await res.json();\n\n  // Ensure acfPosts.date exists before sorting\n  return json.data.posts.nodes.sort((a, b) => {\n    const dateA = new Date(a.acfPosts.date || \"1970-01-01\");\n    const dateB = new Date(b.acfPosts.date || \"1970-01-01\");\n\n    return dateB.getTime() - dateA.getTime();\n  });\n}\n\nexport async function getPostBySlug(slug: string): Promise<Post> {\n  const res = await fetch(API_URL, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      query: `\n        query GetPostBySlug($slug: String!) {\n          postBy(slug: $slug) {\n            id\n            title\n            excerpt \n            slug\n            date\n            featuredImage {\n              node {\n                sourceUrl\n                altText\n                mediaDetails {\n                  sizes {\n                    width\n                    height\n                  }\n                }\n              }\n            }\n            acfPosts {\n              date\n              youtubeId\n              description\n              soundcloudId\n              webportfolioLink\n              customVideoSource  \n              soundUrl\n              imageGallery1 {\n                node {\n                  sourceUrl\n                  altText\n                  mediaDetails {\n                    width\n                    height\n                  }\n                }  \n              }\n              imageGallery2 {\n                node {\n                  sourceUrl\n                  altText\n                  mediaDetails {\n                    width\n                    height\n                  }\n                }  \n              }\n              imageGallery3 {\n                node {\n                  sourceUrl\n                  altText\n                  mediaDetails {\n                    width\n                    height\n                  }\n                }  \n              }\n              imageGallery4 {\n                node {\n                  sourceUrl\n                  altText\n                  mediaDetails {\n                    width\n                    height\n                  }\n                }  \n              }\n            }\n          }\n        }\n      `,\n      variables: { slug },\n    }),\n    next: { revalidate: 60 },\n  });\n\n  const json = await res.json();\n  console.log(\"lkfds\", json);\n  return json.data.postBy || null;\n}\n\nexport async function getCVEntries() {\n  const res = await fetch(API_URL, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      query: `\n        query GetCVEntries {\n          cvEntries {\n            nodes {\n              id\n              title\n              cvEntryFields{\n                date\n                type\n                renderDate\n                location\n                description\n                link\n              }\n \n            }\n          }\n        }\n      `,\n    }),\n    next: { revalidate: 60 }, // ISR (Incremental Static Regeneration)\n  });\n\n  const json = await res.json();\n  // console.log(\"did we content\", json.data.cvEntries.nodes);\n  const expoData: Entry[] = transformExpoData(json);\n  return expoData;\n}\n\n// get category info, use getPostsByCategory to get posts\nexport async function getCategoryBySlug(slug: string): Promise<PostCategory> {\n  const newSlug = translateSlugs(slug);\n  const res = await fetch(API_URL, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      query: `\n        query GetCategoryBySlug($newSlug: ID!) {\n          category(id: $newSlug, idType: SLUG) {\n            id\n            name\n            slug\n            description\n          }\n        }\n      `,\n      variables: { newSlug },\n    }),\n    next: { revalidate: 60 }, // ISR (Incremental Static Regeneration)\n  });\n\n  const json = await res.json();\n  return json.data;\n}\n\n// use to get shop products\n\nexport async function getProducts(): Promise<Product[]> {\n  const res = await fetch(API_URL, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      query: `\n        query GetProducts {\n          products( where: { orderby: { field: DATE, order: DESC } }) {\n            nodes {\n              id\n              slug\n              name\n              ... on SimpleProduct {\n                price(format: RAW)\n                regularPrice(format: RAW)\n                salePrice(format: RAW)\n                \n              }\n              date\n              description\n              featuredImage {\n                cursor\n                node {\n                  altText\n                  caption\n                  file\n                  filePath\n                  sourceUrl\n                }\n              }\n            }\n          }\n        }\n      `,\n    }),\n    next: { revalidate: 60 },\n  });\n\n  const json: ProductResponse = await res.json();\n  return json.data.products.nodes;\n}\n\n// get product by slug\nexport async function getProductBySlug(slug: string): Promise<Product> {\n  const newSlug = translateSlugs(slug);\n  const res = await fetch(API_URL, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      query: `\n        query GetProduct($slug: [String!]) {\n          products(\n            where: { slugIn: $slug, orderby: { field: DATE, order: DESC } }\n          ) {\n            nodes {\n              id\n              slug\n              name\n              ... on SimpleProduct {\n                price(format: RAW)\n                regularPrice(format: RAW)\n                salePrice(format: RAW)\n              }\n              date\n              description\n              featuredImage {\n                node {\n                  altText\n                  caption\n                  sourceUrl\n                }\n              }\n              galleryImages {\n                nodes {\n                  altText\n                  caption\n                  sourceUrl\n                }\n              }\n              shortDescription\n            }\n          }\n        }\n      `,\n      variables: { slug: newSlug },\n    }),\n    next: { revalidate: 60 }, // ISR (Incremental Static Regeneration)\n  });\n\n  const json = await res.json();\n  console.log(\"json: \", json.data.products )\n  return json.data.products.nodes[0] || null;\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 484, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 490, "column": 0}, "map": {"version":3,"sources":["file:///Users/jerrijung/Documents/jeremy-nextJS/nextjs-dashboard/app/lib/youtube.tsx"],"sourcesContent":["import React from \"react\";\n\nconst YouTubeEmbed = ({ videoId }: { videoId: string }) => {\n  return (\n    <div style={{ position: \"relative\", paddingBottom: \"56.25%\", height: 0 }}>\n      <iframe\n        src={`https://www.youtube.com/embed/${videoId}?rel=0&modestbranding=1&autohide=1&showinfo=0&controls=1&fs=0&disablekb=1`}\n        title=\"YouTube video\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: \"100%\",\n          border: \"none\",\n        }}\n      />\n    </div>\n  );\n};\n\nexport default YouTubeEmbed;\n"],"names":[],"mappings":";;;;;AAEA,MAAM,eAAe,CAAC,EAAE,OAAO,EAAuB;IACpD,qBACE,6WAAC;QAAI,OAAO;YAAE,UAAU;YAAY,eAAe;YAAU,QAAQ;QAAE;kBACrE,cAAA,6WAAC;YACC,KAAK,CAAC,8BAA8B,EAAE,QAAQ,yEAAyE,CAAC;YACxH,OAAM;YACN,OAAM;YACN,eAAe;YACf,OAAO;gBACL,UAAU;gBACV,KAAK;gBACL,MAAM;gBACN,OAAO;gBACP,QAAQ;gBACR,QAAQ;YACV;;;;;;;;;;;AAIR;uCAEe"}},
    {"offset": {"line": 527, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 533, "column": 0}, "map": {"version":3,"sources":["file:///Users/jerrijung/Documents/jeremy-nextJS/nextjs-dashboard/app/lib/customVideo.tsx"],"sourcesContent":["import React from \"react\";\n\nconst CustomVideoPlayer = ({ src, autoplay = false, loop = false }: { src: string | undefined; autoplay?: boolean;  loop?: boolean;}) => {\n  return (\n    <div style={{ position: \"relative\", width: \"100%\"}}>\n      <video\n        src={src}\n        autoPlay={autoplay}\n        loop={loop}\n        style={{\n          width: \"100%\",\n          height: \"auto\",\n          borderRadius: \"none\",\n          display: \"block\",\n        }}\n      >\n        Your browser does not support the video tag.\n      </video>\n    </div>\n  );\n};\n\nexport default CustomVideoPlayer;\n"],"names":[],"mappings":";;;;;AAEA,MAAM,oBAAoB,CAAC,EAAE,GAAG,EAAE,WAAW,KAAK,EAAE,OAAO,KAAK,EAAoE;IAClI,qBACE,6WAAC;QAAI,OAAO;YAAE,UAAU;YAAY,OAAO;QAAM;kBAC/C,cAAA,6WAAC;YACC,KAAK;YACL,UAAU;YACV,MAAM;YACN,OAAO;gBACL,OAAO;gBACP,QAAQ;gBACR,cAAc;gBACd,SAAS;YACX;sBACD;;;;;;;;;;;AAKP;uCAEe"}},
    {"offset": {"line": 567, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 572, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/ui/page.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"animateLogo\": \"page-module__1Criqa__animateLogo\",\n  \"customLink\": \"page-module__1Criqa__customLink\",\n  \"customVidWrapper\": \"page-module__1Criqa__customVidWrapper\",\n  \"embedIframe\": \"page-module__1Criqa__embedIframe\",\n  \"imageGalleryItem\": \"page-module__1Criqa__imageGalleryItem\",\n  \"imageGalleryWrapper\": \"page-module__1Criqa__imageGalleryWrapper\",\n  \"imageSection\": \"page-module__1Criqa__imageSection\",\n  \"infoWrapper\": \"page-module__1Criqa__infoWrapper\",\n  \"logoWrapper\": \"page-module__1Criqa__logoWrapper\",\n  \"main\": \"page-module__1Criqa__main\",\n  \"mixcloudWrapper\": \"page-module__1Criqa__mixcloudWrapper\",\n  \"page\": \"page-module__1Criqa__page\",\n  \"spinY\": \"page-module__1Criqa__spinY\",\n  \"stillLogo\": \"page-module__1Criqa__stillLogo\",\n  \"videoWrapper\": \"page-module__1Criqa__videoWrapper\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 589, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 595, "column": 0}, "map": {"version":3,"sources":["file:///Users/jerrijung/Documents/jeremy-nextJS/nextjs-dashboard/app/lib/gallery.tsx"],"sourcesContent":["import React from \"react\";\nimport Image from \"next/image\";\nimport { FeaturedImage } from \"../types/postTypes\";\nimport styles from \"@/app/ui/page.module.css\";\n\ninterface GalleryProps {\n  images: FeaturedImage[];\n}\n\nconst Gallery: React.FC<GalleryProps> = ({ images }) => {\n  return (\n    <div className={styles.imageGalleryWrapper}>\n      {images.map((image) => {\n        // Handle cases where mediaDetails.sizes may be an array\n        const mediaDetails = image.node.mediaDetails;\n        const size = Array.isArray(mediaDetails.sizes) ? mediaDetails.sizes[0] : mediaDetails.sizes;\n\n        return (\n          <Image\n            className={styles.imageGalleryItem}\n            key={image.node.altText || image.node.sourceUrl} // Fallback key\n            src={image.node.sourceUrl} \n            alt={image.node.altText || \"Image\"} // Fallback alt text\n            width={size?.width || 300} // Default size if undefined\n            height={size?.height || 300} \n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Gallery;\n"],"names":[],"mappings":";;;;AACA;AAEA;;;;AAMA,MAAM,UAAkC,CAAC,EAAE,MAAM,EAAE;IACjD,qBACE,6WAAC;QAAI,WAAW,gIAAA,CAAA,UAAM,CAAC,mBAAmB;kBACvC,OAAO,GAAG,CAAC,CAAC;YACX,wDAAwD;YACxD,MAAM,eAAe,MAAM,IAAI,CAAC,YAAY;YAC5C,MAAM,OAAO,MAAM,OAAO,CAAC,aAAa,KAAK,IAAI,aAAa,KAAK,CAAC,EAAE,GAAG,aAAa,KAAK;YAE3F,qBACE,6WAAC,4PAAA,CAAA,UAAK;gBACJ,WAAW,gIAAA,CAAA,UAAM,CAAC,gBAAgB;gBAElC,KAAK,MAAM,IAAI,CAAC,SAAS;gBACzB,KAAK,MAAM,IAAI,CAAC,OAAO,IAAI;gBAC3B,OAAO,MAAM,SAAS;gBACtB,QAAQ,MAAM,UAAU;eAJnB,MAAM,IAAI,CAAC,OAAO,IAAI,MAAM,IAAI,CAAC,SAAS;;;;;QAOrD;;;;;;AAGN;uCAEe"}},
    {"offset": {"line": 630, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 636, "column": 0}, "map": {"version":3,"sources":["file:///Users/jerrijung/Documents/jeremy-nextJS/nextjs-dashboard/app/lib/embedSound.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/lib/embedSound.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/lib/embedSound.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,oXAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0R,GACvT,wDACA"}},
    {"offset": {"line": 644, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 650, "column": 0}, "map": {"version":3,"sources":["file:///Users/jerrijung/Documents/jeremy-nextJS/nextjs-dashboard/app/lib/embedSound.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/lib/embedSound.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/lib/embedSound.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,oXAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsQ,GACnS,oCACA"}},
    {"offset": {"line": 658, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 664, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 668, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 673, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/ui/detailPage.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"infoWrapper\": \"detailPage-module__KjLi-a__infoWrapper\",\n  \"main\": \"detailPage-module__KjLi-a__main\",\n  \"mixcloudWrapper\": \"detailPage-module__KjLi-a__mixcloudWrapper\",\n  \"page\": \"detailPage-module__KjLi-a__page\",\n  \"webPreview\": \"detailPage-module__KjLi-a__webPreview\",\n  \"webPreviewWrapper\": \"detailPage-module__KjLi-a__webPreviewWrapper\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 681, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 687, "column": 0}, "map": {"version":3,"sources":["file:///Users/jerrijung/Documents/jeremy-nextJS/nextjs-dashboard/app/%5Bcategory%5D/%5Bpost%5D/page.tsx"],"sourcesContent":["import { getPostBySlug } from \"@/app/lib/api/fetch\";\nimport YouTubeEmbed from \"@/app/lib/youtube\";\nimport CustomVideoPlayer from \"@/app/lib/customVideo\";\nimport Gallery from \"@/app/lib/gallery\";\nimport SoundEmbed from \"@/app/lib/embedSound\";\nimport { getImageGallery, translateSlugs } from \"@/app/lib/helperFunctions\";\nimport styles from \"@/app/ui/detailPage.module.css\";\n\n\n\n// export async function generateMetadata({\n//   params,\n// }: {\n//   params: { category: string; post: string }\n// }): Promise<Metadata> {\n//   return {\n//     title: `${params.category} - ${params.post}`,\n    \n//   }\n// }\n\n\nexport default async function PostDetailPage({\n  params,\n}: {\n  params: Promise<{ post: string }>\n}) {\n  const getPost = await params;\n  const post = await getPostBySlug( translateSlugs(getPost.post) );\n  \n  \n  const videoId = post.acfPosts.youtubeId !== \"null\" ? post.acfPosts.youtubeId : null;\n  const customVidSrc = post.acfPosts.customVideoSource !== \"null\" ? post.acfPosts.customVideoSource : null;\n  const webLink = post.acfPosts.webportfolioLink !== \"null\" ? post.acfPosts.webportfolioLink : null;  \n  const sounds = post.acfPosts.soundUrl !== null ? \n    post.acfPosts.soundUrl.split(\", \")\n    : null;\n  \n  const imageGallery = getImageGallery(post.acfPosts);\n  // an array of featured images\n  // console.log(\"image gallery get\", imageGallery, sounds)\n\n  return (\n    <main className={styles.main}>\n      <div className={styles.infoWrapper}>\n        <h1 className={styles.title}>{post.title}</h1>\n        <p className={styles.date}>{post.acfPosts.date}</p>\n        <p className={styles.description}>{post.acfPosts.description}</p>\n        {webLink && (\n          <a className={styles.customLink} href={webLink} target=\"_blank\" rel=\"noopener norefferer \">link to website</a>\n        )}\n      </div>\n      \n      <section className={styles.imageSection}>\n        {/* {\n          webLink &&\n          <div className={styles.webPreviewWrapper}>\n            <iframe \n              src={webLink}\n              className={styles.webPreview}\n            />\n          </div>\n        } */}\n        <Gallery images={ imageGallery }/>\n        {sounds &&\n          <div className={styles.mixcloudWrapper}>\n            {sounds.map((sound, idx) => (\n                <SoundEmbed key={`embed-${idx}`} url={sound}/> \n            ))}\n          </div>\n          \n        }  \n        {customVidSrc && (\n          <div className={styles.customVidWrapper}>\n            <CustomVideoPlayer \n              src={customVidSrc} \n              autoplay={true}\n              loop={true}\n            />\n          </div>\n        )}\n        {videoId && (\n          <div className={styles.videoWrapper}>\n            <YouTubeEmbed videoId={videoId} />\n          </div>\n        )}\n      </section>\n    </main>\n  );\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAgBe,eAAe,eAAe,EAC3C,MAAM,EAGP;IACC,MAAM,UAAU,MAAM;IACtB,MAAM,OAAO,MAAM,CAAA,GAAA,0HAAA,CAAA,gBAAa,AAAD,EAAG,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE,QAAQ,IAAI;IAG7D,MAAM,UAAU,KAAK,QAAQ,CAAC,SAAS,KAAK,SAAS,KAAK,QAAQ,CAAC,SAAS,GAAG;IAC/E,MAAM,eAAe,KAAK,QAAQ,CAAC,iBAAiB,KAAK,SAAS,KAAK,QAAQ,CAAC,iBAAiB,GAAG;IACpG,MAAM,UAAU,KAAK,QAAQ,CAAC,gBAAgB,KAAK,SAAS,KAAK,QAAQ,CAAC,gBAAgB,GAAG;IAC7F,MAAM,SAAS,KAAK,QAAQ,CAAC,QAAQ,KAAK,OACxC,KAAK,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,QAC3B;IAEJ,MAAM,eAAe,CAAA,GAAA,6HAAA,CAAA,kBAAe,AAAD,EAAE,KAAK,QAAQ;IAClD,8BAA8B;IAC9B,yDAAyD;IAEzD,qBACE,6WAAC;QAAK,WAAW,sIAAA,CAAA,UAAM,CAAC,IAAI;;0BAC1B,6WAAC;gBAAI,WAAW,sIAAA,CAAA,UAAM,CAAC,WAAW;;kCAChC,6WAAC;wBAAG,WAAW,sIAAA,CAAA,UAAM,CAAC,KAAK;kCAAG,KAAK,KAAK;;;;;;kCACxC,6WAAC;wBAAE,WAAW,sIAAA,CAAA,UAAM,CAAC,IAAI;kCAAG,KAAK,QAAQ,CAAC,IAAI;;;;;;kCAC9C,6WAAC;wBAAE,WAAW,sIAAA,CAAA,UAAM,CAAC,WAAW;kCAAG,KAAK,QAAQ,CAAC,WAAW;;;;;;oBAC3D,yBACC,6WAAC;wBAAE,WAAW,sIAAA,CAAA,UAAM,CAAC,UAAU;wBAAE,MAAM;wBAAS,QAAO;wBAAS,KAAI;kCAAuB;;;;;;;;;;;;0BAI/F,6WAAC;gBAAQ,WAAW,sIAAA,CAAA,UAAM,CAAC,YAAY;;kCAUrC,6WAAC,sHAAA,CAAA,UAAO;wBAAC,QAAS;;;;;;oBACjB,wBACC,6WAAC;wBAAI,WAAW,sIAAA,CAAA,UAAM,CAAC,eAAe;kCACnC,OAAO,GAAG,CAAC,CAAC,OAAO,oBAChB,6WAAC,yHAAA,CAAA,UAAU;gCAAsB,KAAK;+BAArB,CAAC,MAAM,EAAE,KAAK;;;;;;;;;;oBAKtC,8BACC,6WAAC;wBAAI,WAAW,sIAAA,CAAA,UAAM,CAAC,gBAAgB;kCACrC,cAAA,6WAAC,0HAAA,CAAA,UAAiB;4BAChB,KAAK;4BACL,UAAU;4BACV,MAAM;;;;;;;;;;;oBAIX,yBACC,6WAAC;wBAAI,WAAW,sIAAA,CAAA,UAAM,CAAC,YAAY;kCACjC,cAAA,6WAAC,sHAAA,CAAA,UAAY;4BAAC,SAAS;;;;;;;;;;;;;;;;;;;;;;;AAMnC"}},
    {"offset": {"line": 830, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 841, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 841, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}